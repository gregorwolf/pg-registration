{
  "name": "pg-registration",
  "version": "1.0.0",
  "description": "CAP Event Registration using PostgreSQL for persistence",
  "repository": "https://github.com/gregorwolf/pg-registration",
  "license": "derived Beer-Ware",
  "private": true,
  "dependencies": {
    "@sap/cds": "^5",
    "@sap/xsenv": "^3.1.0",
    "@sap/xssec": "^3.2.1",
    "cds-pg": "^0.1.1",
    "express": "^4",
    "passport": "^0.4.1"
  },
  "devDependencies": {
    "cds-dbm": "^0.0.26",
    "sqlite3": "^5.0.2",
    "npm-run-all": "^4.1.5"
  },
  "scripts": {
    "start": "cds run",
    "docker:start:cds": "docker run --name pg-registration -p 4004:4004 -t gregorwolf/pg-registration:latest",
    "build": "npx cds-dbm build --production",
    "build:docker": "run-s build build:docker:image",
    "build:docker:image": "docker build -t gregorwolf/pg-registration:latest .",
    "deploy:pg": "npx cds-dbm deploy --load-via delta"
  },
  "cds": {
    "requires": {
      "db": {
        "kind": "database"
      },
      "database": {
        "impl": "cds-pg",
        "model": [
          "srv"
        ]
      },
      "uaa": {
        "kind": "xsuaa"
      }
    },
    "migrations": {
      "db": {
        "schema": {
          "default": "public",
          "clone": "_cdsdbm_clone",
          "reference": "_cdsdbm_ref"
        },
        "deploy": {
          "tmpFile": "tmp/_autodeploy.json",
          "undeployFile": "db/undeploy.json"
        }
      }
    },
    "build": {
      "tasks": [
        {
          "use": "node-cf",
          "src": "srv"
        },
        {
          "use": "postgres-cf",
          "src": "db"
        }
      ]
    }
  },
  "eslintConfig": {
    "extends": "eslint:recommended",
    "env": {
      "es2020": true,
      "node": true,
      "jest": true,
      "mocha": true
    },
    "globals": {
      "SELECT": true,
      "INSERT": true,
      "UPDATE": true,
      "DELETE": true,
      "CREATE": true,
      "DROP": true,
      "CDL": true,
      "CQL": true,
      "CXL": true,
      "cds": true
    },
    "rules": {
      "no-console": "off",
      "require-atomic-updates": "off"
    }
  }
}